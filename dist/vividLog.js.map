{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/enums.js","webpack:///./lib/vividLog.js","webpack:///./lib/utils.js","webpack:///./lib/config/config.js","webpack:///./lib/methods.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SMALL_LOGGABLE","BIG_LOGGABLE","DEBUG","val","ERROR","INFO","LOG","WARNING","LOG_ENUM","freeze","require","util","config","methods","vividLog","takeOver","activate","group","grouped","this","autoGroup","style","customStyle","fireLabel","label","log","loggable","arguments","debug","err","warn","done","info","say","color","checkTypeLog","fire","logBuilder","document","title","styleBuilder","type","console","status","time","window","lightColor","_typeof","length","keys","variable","format","timeObj","returnTime","iteration","h","ms","date","Date","split","timeNotation","getHours","getMinutes","getSeconds","getMilliseconds","css","lightTheme","iUseLightTheme","fontSize","isTypeOfLoggable","darkColor","var","makeStyleCompatible","typeOrLabel","code","createTime","getType","newLine","resetConfs","compiled","v","args","iterateLoggables","evaluate","toUpperCase","groupCollapsed","groupEnd","navigator","userAgent","includes","error","success","warning","turnOn","onerror","event","preventDefault","stopImmediatePropagation","stopPropagation","stack"],"mappings":"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","file":"vividLog.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nmodule.exports = {\n\t// Size type of log\n\tSMALL_LOGGABLE: 0,\n\tBIG_LOGGABLE: 1,\n\t// Type of log\n\tDEBUG: {\n\t\ti: 2,\n\t\tval: 'debug'\n\t},\n\tERROR: {\n\t\ti: 3,\n\t\tval: 'error'\n\t},\n\tINFO: {\n\t\ti: 4,\n\t\tval: 'info'\n\t},\n\tLOG: {\n\t\ti: 5,\n\t\tval: 'log'\n\t},\n\tWARNING: {\n\t\ti: 6,\n\t\tval: 'warning'\n\t}\n};","'use strict';\n\n// Has to be immutable\nvar LOG_ENUM = Object.freeze(require('./enums'));\n\nvar util    = require('./utils');\nvar config  = require('./config/config');\nvar methods = require('./methods');\n\n/**\n * Create vividLog object\n *\n */\nvar vividLog = {};\n\n/**\n * Holds a copy of default config\n *\n * @type {{timeNotation, autoGroup, iUseLightTheme, nav, newLine, customStyle, fontSize, status}|*}\n */\nvividLog.config = config;\n\n/**\n * Take over default error log\n *\n * @param activate\n */\nvividLog.takeOver = function (activate) {\n\tmethods.takeOver(activate || false);\n};\n\n/**\n * Chain before log to group the all logs\n *\n * @param grouped\n * @returns {vividLog}\n */\nvividLog.group = function (grouped) {\n\tthis.config.autoGroup = grouped || true;\n\treturn this;\n};\n\n/**\n * Chain before log to give message a custom style\n *\n * @param customStyle\n * @returns {vividLog}\n */\nvividLog.style = function (customStyle) {\n\tthis.config.customStyle = customStyle || '';\n\treturn this;\n};\n\n/**\n * Only log a label\n *\n * @param label\n */\nvividLog.fireLabel = function (label) {\n\tutil.fireLabel(label);\n\treturn this;\n};\n\n/**\n * Normal priority log\n *\n * @returns {vividLog}\n */\nvividLog.log = function () {\n\tutil.loggable(arguments, 'log');\n\treturn this;\n};\n\n/**\n * Debug priority log\n *\n * @returns {vividLog}\n */\nvividLog.debug = function () {\n\tutil.loggable(arguments, 'debug');\n\treturn this;\n};\n\n/**\n * Error priority log\n *\n * @returns {vividLog}\n */\nvividLog.err = function () {\n\tutil.loggable(arguments, 'error');\n\treturn this;\n};\n\n/**\n * Warning priority log\n *\n * @returns {vividLog}\n */\nvividLog.warn = function () {\n\tutil.loggable(arguments, 'warning');\n\treturn this;\n};\n\n/**\n * Success priority log\n *\n * @returns {vividLog}\n */\nvividLog.done = function () {\n\tutil.loggable(arguments, 'success');\n\treturn this;\n};\n\n/**\n * Information priority log\n *\n * @returns {vividLog}\n */\nvividLog.info = function () {\n\tutil.loggable(arguments, 'info');\n\treturn this;\n};\n\n/**\n * Custom logging utility\n *\n * @param loggable\n * @param label\n * @param color\n * @returns {boolean}\n */\nvividLog.say = function (loggable, label, color) {\n\tif (util.checkTypeLog(loggable) === LOG_ENUM.SMALL_LOGGABLE) {\n\t\treturn util.fire(util.logBuilder(loggable, label || document.title), util.styleBuilder(color || 'brown', color || 'brown'));\n\t}\n\n\tif (util.checkTypeLog(loggable) === LOG_ENUM.BIG_LOGGABLE) {\n\t\tvar style = util.styleBuilder(type);\n\t\tconsole.log(\n\t\t\tutil.logBuilder('nullObjectType', type),\n\t\t\tstyle.status,\n\t\t\tstyle.time,\n\t\t\tstyle.type\n\t\t);\n\t\tconsole.log(loggable);\n\t\tconsole.log(\n\t\t\t'%c                         ',\n\t\t\t'padding: 0 5px;font-weight: bolder; border-top: 2px solid ' + window.vividLog.config.status[type].lightColor + ';'\n\t\t);\n\t\treturn true;\n\t}\n};\n\nmodule.exports = window.vividLog = vividLog;","'use strict';\n\nvar LOG_ENUM = require('./enums');\nvar util     = {};\n\n/**\n * Evaluate incoming loggable and type\n *\n * @param loggable\n * @param type\n * @returns {boolean}\n */\nutil.evaluate = function (loggable, type) {\n\tif (util.checkTypeLog(loggable) === LOG_ENUM.SMALL_LOGGABLE) {\n\t\treturn util.fire(util.logBuilder(loggable, type), util.styleBuilder(type));\n\t}\n\n\tif (util.checkTypeLog(loggable) === LOG_ENUM.BIG_LOGGABLE) {\n\t\tvar style = util.styleBuilder(type);\n\t\tconsole.log(\n\t\t\tutil.logBuilder('nullObjectType', type),\n\t\t\tstyle.status,\n\t\t\tstyle.time,\n\t\t\tstyle.type\n\t\t);\n\t\tconsole.log(loggable);\n\t\tconsole.log(\n\t\t\t'%c                         ',\n\t\t\t'padding: 0 5px;font-weight: bolder; border-top: 2px solid ' + vividLog.config.status[type].lightColor + ';'\n\t\t);\n\t}\n\treturn false;\n};\n\n/**\n * Find type and length of loggable\n *\n * @param loggable\n * @returns {string|boolean}\n */\nutil.getType = function (loggable) {\n\tvar len;\n\tswitch (typeof loggable) {\n\t\tcase 'string':\n\t\t\tlen = loggable.length || 0;\n\t\t\treturn 'string[' + len + ']';\n\t\tcase 'boolean':\n\t\t\treturn 'boolean';\n\t\tcase 'number':\n\t\t\tlen = (loggable + '').length;\n\t\t\treturn 'integer[' + len + ']';\n\t\tcase 'object':\n\t\t\tlen = Object.keys(loggable).length;\n\t\t\treturn 'object[' + len + ']';\n\t\tcase 'bigint':\n\t\t\tlen = (loggable + '').length;\n\t\t\treturn 'big integer[' + len + ']';\n\t\tcase 'function':\n\t\t\treturn 'function';\n\t\tcase 'symbol':\n\t\t\treturn 'symbol';\n\t\tcase 'undefined':\n\t\t\treturn 'undefined';\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\n/**\n * Check if type is any of the types of logs\n *\n * @param variable\n * @returns {boolean}\n */\nutil.isTypeOfLoggable = function (variable) {\n\treturn (\n\t\tvariable === 'log' ||\n\t\tvariable === 'debug' ||\n\t\tvariable === 'error' ||\n\t\tvariable === 'info' ||\n\t\tvariable === 'success' ||\n\t\tvariable === 'warning'\n\t);\n};\n\n/**\n * Compile a timestamp based on the config\n *\n * @param format\n * @returns {string|boolean}\n */\nutil.createTime = function (format) {\n\tvar time       = util.timeObj(format);\n\tvar returnTime = '';\n\n\tfor (var iteration = 0; iteration < time.format.length; iteration++) {\n\t\tswitch (time.format[iteration]) {\n\t\t\tcase 'h':\n\t\t\t\treturnTime += time.h;\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\treturnTime += time.m;\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\treturnTime += time.s;\n\t\t\t\tbreak;\n\t\t\tcase 'ms':\n\t\t\t\treturnTime += time.ms;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (iteration !== (time.format.length - 1)) {\n\t\t\treturnTime += ':';\n\t\t}\n\t}\n\tif (returnTime.length >= 1) {\n\t\treturn returnTime;\n\t}\n\treturn false;\n};\n\n/**\n * Return current datetime and config time notation\n *\n * @param format\n * @returns {{s: string, ms: string, format: (void|string[]), h: string, m: string}}\n */\nutil.timeObj = function (format) {\n\tvar date = new Date();\n\treturn {\n\t\tformat: format.split(':') || window.vividLog.config.timeNotation.split(':'),\n\t\th: (date.getHours() < 10 ? '0' : '') + date.getHours(),\n\t\tm: (date.getMinutes() < 10 ? '0' : '') + date.getMinutes(),\n\t\ts: (date.getSeconds() < 10 ? '0' : '') + date.getSeconds(),\n\t\tms: (date.getMilliseconds() < 10 ? '0' : '') + date.getMilliseconds()\n\t};\n};\n\n/**\n * Check if loggable is a big or small loggable\n *\n * @param loggable\n * @returns {number}\n */\nutil.checkTypeLog = function (loggable) {\n\treturn (typeof loggable === 'string' || typeof loggable === 'number' || typeof loggable === 'undefined')\n\t\t? LOG_ENUM.SMALL_LOGGABLE\n\t\t: LOG_ENUM.BIG_LOGGABLE;\n};\n\n\n/**\n * TODO | Will return verified and fixed css from user input\n *\n * @param css\n * @returns {*}\n */\nutil.makeStyleCompatible = function (css) {\n\t// Check (and fix) user written css | Todo\n\treturn css;\n};\n\n/**\n * Compile CSS rules for log into object\n *\n * @param type\n * @param color\n * @returns {{var: *, time: string, type: *, status: string}}\n */\nutil.styleBuilder = function (type, color) {\n\tvar lightTheme  = window.vividLog.config.iUseLightTheme ? 'color: white;' : '';\n\tvar customStyle = window.vividLog.config.customStyle;\n\tvar fontSize    = 'font-size: ' + window.vividLog.config.fontSize + ';';\n\n\tvar typeOrColorLight = util.isTypeOfLoggable(type) ? window.vividLog.config.status[type].lightColor : color;\n\tvar typeOrColorDark  = util.isTypeOfLoggable(type) ? window.vividLog.config.status[type].darkColor : color;\n\n\tvar style = {\n\t\tdefault: 'color: #F1F5F8;' + fontSize,\n\t\tlabelDefault: 'border-radius: 5px; padding: 5px;' + 'background: ' + typeOrColorLight + ';',\n\t\ttimeDefault: '',\n\t\tlogNameDefault: 'font-weight: bold;',\n\t\ttypeNameDefault: 'background: ' + typeOrColorDark + ';',\n\t\tvarDefault: 'margin-top: 10px; margin-bottom: 5px;' + lightTheme,\n\t\tcustom: util.makeStyleCompatible(customStyle)\n\t};\n\n\treturn {\n\t\tstatus: style.default + style.labelDefault + style.logNameDefault,\n\t\ttime: style.default + style.labelDefault + style.timeDefault,\n\t\ttype: style.default + style.labelDefault + style.typeNameDefault,\n\t\tvar: style.default + style.varDefault + style.custom\n\t};\n};\n\n/**\n * Compile loggable\n *\n * @param loggable\n * @param typeOrLabel\n * @returns {string}\n */\nutil.logBuilder = function (loggable, typeOrLabel) {\n\tvar label = util.isTypeOfLoggable(typeOrLabel) ? vividLog.config.status[typeOrLabel].code : typeOrLabel;\n\n\tif (loggable !== 'nullObjectType') {\n\t\treturn '%c' + label +\n\t\t\t'%c' + util.createTime(vividLog.config.timeNotation) +\n\t\t\t'%c' + util.getType(loggable) + (vividLog.config.newLine ? ' ' : '\\n') +\n\t\t\t'%c ' + loggable;\n\t}\n\n\treturn '%c' + vividLog.config.status[type].code +\n\t\t'%c' + util.createTime(vividLog.config.timeNotation) +\n\t\t'%c' + util.getType(loggable);\n};\n\n/**\n * Reset chained function config changes\n *\n * @returns {boolean}\n */\nutil.resetConfs = function () {\n\tvividLog.config.customStyle = '';\n\tvividLog.config.autoGroup   = false;\n\n\treturn (window.vividLog.config.customStyle === '' && window.vividLog.config.autoGroup === false);\n\n};\n\n/**\n * Do the actual log to console\n *\n * @param loggable\n * @param style\n * @returns {boolean}\n */\nutil.fire = function (loggable, style) {\n\tif (util.resetConfs()) {\n\t\tconsole.log(loggable, style.status, style.time, style.type, style.var);\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Only log a label\n *\n * @param label\n * @param type\n */\nutil.fireLabel = function (label, type) {\n\tvar compiled = '%c' + label + '%c' + util.createTime(v.config.timeNotation) + '%c' + type;\n\tvar style    = util.styleBuilder('purple', 'purple');\n\tstyle.var    = '';\n\n\tutil.fire(compiled, style);\n};\n\n/**\n * Iterate over all given arguments, or not depending on number of arguments\n *\n * @param args\n * @param type\n */\nutil.loggable = function (args, type) {\n\tif (args.length > 1) {\n\t\treturn util.iterateLoggables(args, type);\n\t}\n\n\treturn util.evaluate(args[0], type);\n};\n\n/**\n * If multiple loggables are given, they will be iterated through here\n *\n * @param args\n * @param type\n * @returns {boolean}\n */\nutil.iterateLoggables = function (args, type) {\n\tif (vividLog.config.autoGroup) {\n\t\tutil.fireLabel(type.toUpperCase(), 'Group[' + args.length + ']');\n\t\tconsole.groupCollapsed(type.toUpperCase());\n\t}\n\n\tfor (var i = 0; i < args.length; i++) {\n\t\tutil.evaluate(args[i], 'log');\n\t}\n\n\tconsole.groupEnd();\n\tvividLog.config.autoGroup = false;\n\n\treturn true;\n};\n\n/**\n * Export\n */\nmodule.exports = util;","\"use strict\";\n\nmodule.exports = {\n    autoGroup: false,\n    timeNotation: 'h:m:s:ms',\n    iUseLightTheme: false,\n    customStyle: '',\n    fontSize: '12px',\n    newLine: typeof navigator !== 'undefined' ? navigator.userAgent.includes('Firefox') : false,\n    status: {\n        error: {\n            lightColor: '#da3030',\n            darkColor: '#872323',\n            code: 'ERROR'\n        },\n        success: {\n            lightColor: '#00b808',\n            darkColor: '#21872a',\n            code: 'SUCCESS'\n        },\n        warning: {\n            lightColor: '#da993e',\n            darkColor: '#875a2a',\n            code: 'WARNING'\n        },\n        info: {\n            lightColor: '#b0b52c',\n            darkColor: '#788738',\n            code: 'INFO'\n        },\n        debug: {\n            lightColor: '#da43be',\n            darkColor: '#872773',\n            code: 'DEBUG'\n        },\n        log: {\n            lightColor: '#65b0b9',\n            darkColor: '#4f7e87',\n            code: 'LOG'\n        }\n    },\n}","'use strict';\n\nmodule.exports = {\n\t/**\n\t * Redefines on error event\n\t *\n\t * @returns {boolean}\n\t * @param turnOn\n\t */\n\ttakeOver: function (turnOn) {\n\t\tif (turnOn) {\n\t\t\twindow.onerror = function () {\n\t\t\t\tif (arguments) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tvividLog.err(arguments[4].stack);\n\t\t\t\t\treturn true; // Prevents any event bubbling\n\t\t\t\t}\n\t\t\t\treturn false; // Resume default event\n\t\t\t};\n\t\t\treturn true;\n\t\t}\n\t\tvividLog.style('font-style: italic;')\n\t\t        .say('f v.takeOver() was called but was not turned on. Do so by using v.takeOver(true)', 'VividLog', '#E3342F');\n\n\t\treturn false;\n\t}\n};"],"sourceRoot":""}